apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "net.quduo.pixel"
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // buildTypes {
    //     applicationVariants.all { variant ->
    //         def fileName = variant.packageApplication.outputFile.name.replace(".apk", "-" + defaultConfig.versionName + ".apk")
    //         variant.packageApplication.outputFile = new
    //                 File(variant.packageApplication.outputFile.parent, fileName)
    //         if (variant.zipAlign) {
    //             if (variant.name.equals('release')) {
    //                  variant.outputFile = new File(variant.outputFile.parent, rootProject.name + "-" + defaultConfig.versionName + ".apk")
    //             }
    //         }
    //     }
    // }

    // 声明创建一个带签名的发布版本细节
    // signingConfigs {
    //     release {
    //         storeFile file("D:/development/Android/keys/android.keystore")
    //         storePassword "######"
    //         keyAlias "######"
    //         keyPassword "######"
    //     }
    // }

    //
    // To sign release builds, create the file `gradle.properties` in
    // $HOME/.gradle or in your project directory with this content:
    //
    // mStoreFile='../../../keys/android.keystore'
    // mStorePassword=789270
    // mKeyAlias=keystore
    // mKeyPassword=789270
    if (project.hasProperty('mStoreFile') && project.hasProperty('mStorePassword') && project.hasProperty('mKeyAlias') && project.hasProperty('mKeyPassword')) {
        signingConfigs {
            release {
                storeFile file(mStoreFile)
                storePassword mStorePassword
                keyAlias mKeyAlias
                keyPassword mKeyPassword
            }
        }
        buildTypes.release.signingConfig = signingConfigs.release
    } else {
        buildTypes.release.signingConfig = null
    }

    // sourceSets {
    //     main {
    //         // 编译配置
    //         manifest.srcFile 'src/main/AndroidManifest.xml'
    //         java.srcDirs = ['src']
    //         resources.srcDirs = ['src']
    //         aidl.srcDirs = ['src']
    //         renderscript.srcDirs = ['src']
    //         res.srcDirs = ['src/main/res']
    //         assets.srcDirs = ['assets']
    //     }
    //     instrumentTest.setRoot('tests')
    // }


    lintOptions {
        disable 'MissingTranslation', 'InvalidPackage'
    }

    subprojects {

        afterEvaluate {
            if (getPlugins().hasPlugin('android') || getPlugins().hasPlugin('android-library')) {

                configure(android.lintOptions) {
                    disable 'AndroidGradlePluginVersion', 'MissingTranslation'
                }
            }

        }
    }
}

// compileOptions {
//     sourceCompatibility JavaVersion.VERSION_1_7
//     targetCompatibility JavaVersion.VERSION_1_7
// }

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // compile 'com.android.support:appcompat-v4:21.0.2'
    compile 'com.android.support:appcompat-v7:21.0.2'
    compile 'com.android.support:support-v4:21.0.2'
    // compile 'de.greenrobot:greendao:1.3.7'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'eu.the4thfloor.volley:com.android.volley:2015.01.06'
    // compile 'org.springframework.android:spring-android-rest-template:2.0.0.M1'
    // compile project(':com.android.volley')
    compile 'com.github.chrisbanes.actionbarpulltorefresh:extra-abc:+'
}
